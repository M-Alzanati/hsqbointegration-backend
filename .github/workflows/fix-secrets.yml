name: Fix or Update AWS Secrets

on:
  workflow_dispatch:
    inputs:
      AWS_REGION:
        description: "AWS Region (default: us-east-1)"
        required: false
        default: "us-east-1"
      DELETE_FIRST:
        description: "Delete existing secrets first (true) before recreating"
        required: false
        default: "true"
      FORCE_DELETE:
        description: "Type 'true' to force immediate deletion without recovery (irreversible)"
        required: false
        default: "false"

jobs:
  fix-secrets:
    name: Update Secrets Manager values
    runs-on: ubuntu-latest
    env:
      AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
      AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
      AWS_REGION: ${{ inputs.AWS_REGION }}
    steps:
      - name: Echo plan
        run: |
          echo "Region: ${{ inputs.AWS_REGION }}"
          echo "DELETE_FIRST: ${{ inputs.DELETE_FIRST }}"
          echo "FORCE_DELETE: ${{ inputs.FORCE_DELETE }}"

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-access-key-id: ${{ env.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ env.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ env.AWS_REGION }}

      - name: Delete existing secrets (optional)
        if: ${{ inputs.DELETE_FIRST == 'true' }}
        shell: bash
        env:
          FORCE_DELETE: ${{ inputs.FORCE_DELETE }}
        run: |
          set -euo pipefail
          secrets=(
            "docdb/password"
            "service/api/key"
            "quickbooks/client/id"
            "quickbooks/client/secret"
            "hubspot/api/key"
          )
          for name in "${secrets[@]}"; do
            if aws secretsmanager describe-secret --secret-id "$name" >/dev/null 2>&1; then
              if [[ "$FORCE_DELETE" == "true" ]]; then
                echo "Force deleting secret: $name"
                aws secretsmanager delete-secret --secret-id "$name" --force-delete-without-recovery >/dev/null || true
                # wait until it disappears (eventual consistency)
                for i in {1..10}; do
                  if aws secretsmanager describe-secret --secret-id "$name" >/dev/null 2>&1; then
                    sleep 2
                  else
                    break
                  fi
                done
              else
                echo "Scheduling deletion in 7 days for secret: $name"
                aws secretsmanager delete-secret --secret-id "$name" --recovery-window-in-days 7 >/dev/null || true
              fi
            else
              echo "Secret not found: $name (skip)"
            fi
          done
          if [[ "$FORCE_DELETE" != "true" ]]; then
            echo "WARNING: Secrets scheduled for deletion; re-creation with the same names will fail until they are fully deleted."
          fi

      - name: Recreate secrets via CloudFormation (secrets-only)
        shell: bash
        run: |
          set -euo pipefail
          aws cloudformation deploy \
            --stack-name hubspot-quickbooks-secrets \
            --template-file src/secrets-only.yaml \
            --capabilities CAPABILITY_NAMED_IAM
