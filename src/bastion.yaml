AWSTemplateFormatVersion: "2010-09-09"
Description: Bastion host to access DocumentDB via SSH and/or SSM

Parameters:
  VpcId:
    Type: String
    Description: VPC where the bastion will be launched
  PublicSubnetId:
    Type: String
    Description: Public subnet ID for the bastion instance
  BastionKeyName:
    Type: AWS::EC2::KeyPair::KeyName
    Description: Existing EC2 KeyPair name (.pem you hold locally)
  BastionAllowedCidr:
    Type: String
    Default: 0.0.0.0/0
    Description: CIDR allowed to SSH to the bastion (restrict to your IP)
  InstanceType:
    Type: String
    Default: t3.micro
    AllowedPattern: '[-a-zA-Z0-9.]+'
  EnableSSM:
    Type: String
    Default: "true"
    AllowedValues: ["true", "false"]
  AssignElasticIp:
    Type: String
    Default: "false"
    AllowedValues: ["true", "false"]
  AmiParameter:
    Type: 'AWS::SSM::Parameter::Value<AWS::EC2::Image::Id>'
    Default: /aws/service/ami-amazon-linux-latest/al2023-ami-kernel-default-x86_64
    Description: SSM parameter for latest Amazon Linux 2023 AMI

Conditions:
  UseSSM: !Equals [!Ref EnableSSM, "true"]
  UseEip: !Equals [!Ref AssignElasticIp, "true"]

Resources:
  BastionSecurityGroup:
    Type: AWS::EC2::SecurityGroup
    Properties:
      GroupDescription: Bastion SSH/SSM access
      VpcId: !Ref VpcId
      SecurityGroupIngress:
        - IpProtocol: tcp
          FromPort: 22
          ToPort: 22
          CidrIp: !Ref BastionAllowedCidr
      SecurityGroupEgress:
        - IpProtocol: -1
          CidrIp: 0.0.0.0/0

  BastionRole:
    Type: AWS::IAM::Role
    Condition: UseSSM
    Properties:
      AssumeRolePolicyDocument:
        Version: '2012-10-17'
        Statement:
          - Effect: Allow
            Principal:
              Service: ec2.amazonaws.com
            Action: sts:AssumeRole
      ManagedPolicyArns:
        - arn:aws:iam::aws:policy/AmazonSSMManagedInstanceCore

  BastionInstanceProfile:
    Type: AWS::IAM::InstanceProfile
    Condition: UseSSM
    Properties:
      Roles:
        - !Ref BastionRole

  BastionInstance:
    Type: AWS::EC2::Instance
    Properties:
      ImageId: !Ref AmiParameter
      InstanceType: !Ref InstanceType
      KeyName: !Ref BastionKeyName
      IamInstanceProfile: !If [UseSSM, !Ref BastionInstanceProfile, !Ref 'AWS::NoValue']
      NetworkInterfaces:
        - AssociatePublicIpAddress: true
          DeviceIndex: 0
          GroupSet: [!Ref BastionSecurityGroup]
          SubnetId: !Ref PublicSubnetId
      Tags:
        - Key: Name
          Value: DocDBBastion

  BastionEip:
    Type: AWS::EC2::EIP
    Condition: UseEip
    Properties:
      Domain: vpc

  BastionEipAssociation:
    Type: AWS::EC2::EIPAssociation
    Condition: UseEip
    Properties:
      AllocationId: !GetAtt BastionEip.AllocationId
      InstanceId: !Ref BastionInstance

Outputs:
  BastionInstanceId:
    Value: !Ref BastionInstance
  BastionSecurityGroupId:
    Value: !Ref BastionSecurityGroup
    Export:
      Name: hsqbo:bastion:SecurityGroupId
  BastionPublicIp:
    Value: !If [UseEip, !Ref BastionEip, !GetAtt BastionInstance.PublicIp]
    Description: Public IP (EIP if assigned, else instance public IP)
